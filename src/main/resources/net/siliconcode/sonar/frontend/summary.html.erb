<%
# The MIT License (MIT)
# 
# Sonar Quamoco Plugin
# Copyright (c) 2015 Isaac Griffith, SiliconCode, LLC
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#chartTitle = widget_properties["chartTitle"]

#metrics_of_domain = Metric.by_domain("Quamoco-Quality")
#metricNames = ["Quality", "Functional Suitability", "Reliability", "Performance Efficiency", "Usability", "Maintainability", "Security", "Compatibility", "Portability"]
#metricMap = {}
#count = 0
#js_data = "["
#metrics_of_domain.each do |metricObj|
#    if(!metricObj.nil?)
#        measureObj = measure(metricObj.key);
        
#        if (!measureObj.nil?)
#            if (metricObj.numeric? && !measureObj.value.nil? && metricNames.include?(metricObj.short_name))
#                metricMap[metricObj.short_name] = measureObj.value
#            end
#        end
#    end
#end

#metricNames.each do |name|
#    value = metricMap[name]
    #unless (value.nil?)
#        retVal = "{"
#        retVal.concat("\"title\":\"#{name}\",")
#        retVal.concat("\"subtitle\":\"Between 0.0 and 1.0\",")
#        retVal.concat("\"ranges\":[0.9,0.92,0.94,0.96,0.98],")
#        retVal.concat("\"measures\":[.96,.985],")
#        retVal.concat("\"markers\":[0.98]")
#        retVal.concat("},")
#        js_data.concat(retVal)
#        count = count + 1
    #end
#end

#js_data = js_data.chomp(",")
#js_data.concat("]") 

#chartHeight = 50 * count
#chartWidth = 615

%>

<link rel="stylesheet" type="text/css" href="<%= url_for_static(:plugin => 'MSUFrontEnd', :path => 'quamoco.css') -%>" media="screen" />
 
<div class="quamoco_summary_widget" style="height:100%; width:815px">
      
<div class="widget">
          
<div class="quamoco-summary" id="quamoco-summary" width="815">
<!--[if lte IE 8 ]> <h3>Your browser is out of date and does not support this widget.</h3> <!--[endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
    
    <h2>Summary</h2>
    <hr width="815" align="left"/>
    <script src="<%= url_for_static(:plugin => 'MSUFrontEnd', :path => 'components.js') -%>"></script>
<script>

var data = [{"quality":{"grade":"A","value":[1.0,0.0]},"rmf":{"grade":"B","value":[1.0,0.0]},"td":{"ratio":[100.0,+90.5],"value":[138,-99],"loc":[45000,1000]},"effort":{"A":[0,0],"B":[0,0],"C":[0,0],"D":[0,0]}}];

var width = 800;
var height = 250;
var topSectWidth = 200;

var svg = d3.select("#quamoco-summary")
	.selectAll("svg")
	.data(data)
    .enter()
	.append("svg")
      .attr("class", "quamoco")
      .attr("width", width)
      .attr("height", height);

var quality = svg.append("g")
	.style("text-anchor", "start");

gradebox(quality, "Quality Rating:", "quality");

var q_value = quality.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(100, 40)");

valueFieldWithHeader(q_value, "subtitle", "Value:", 30, 0, 30, 0, "quality", "value", "");
	
var rmf = svg.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(200, 0)");

gradebox(rmf, "RMF Rating:", "rmf");
	
var r_value = rmf.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(100, 40)");

valueFieldWithHeader(r_value, "subtitle", "Value:", 30, 0, 30, 0, "rmf", "value", "");
	
var td = svg.append("g")
	.attr("transform", "translate(400, 0)");

valueFieldWithHeader(td, "title", "Technical Debt Ratio:", 70, 20, 70, 1, "td", "ratio", "%")
valueFieldWithHeader(td, "subtitle", "Technical Debt:", 65, 70, 65, 1, "td", "value", "d");
	
td.append("text")
	.attr("class", "subtitle")
	.attr({
		x: 125,
		y: 70
	})
	.text("Lines of Code:");
	
td.append("text")
	.attr("class", "value")
	.attr({
		x: 130,
		y: 95
	})
	.text(function(d) { return d.td.loc[0] / 1000 + "k"; });

td.append("text")
	.attr("class", function(d) {
		var val = d.td.loc[1];
		if (val < 0)
			return "negchange";
		else if (val > 0)
			return "poschange";
		return "zerochange"
	})
	.attr("x", 170)
	.attr("y", 95)
	.text(function(d) { return "(" + d.td.loc[1] / 1000 + "k)"; });	
	
var effort = svg.append("g")
	.attr("transform", "translate(0, 115)");
	
effort.append("text")
	.attr("class", "title")
	.attr("x", 0)
	.attr("y", 0)
	.text("Effort Required");
	
var effort_g = effort.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(20, 25)");
	
effortBox(effort_g, 0, 0, "A");
effortBox(effort_g, 150, 0, "B");
effortBox(effort_g, 300, 0, "C");
effortBox(effort_g, 450, 0, "D");
</script>
<!--<![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
</div>
</div>
</div>