<%


quality = widget_properties["qualityMetric"]
rmf = widget_properties["rmfMetric"]
tdRatio = widget_properties["tdRatioMetric"]
tdValue = widget_properties["tdValueMetric"]
loc = widget_properties["locMetric"]
effA = widget_properties["effortToAMetric"]
effB = widget_properties["effortToBMetric"]
effC = widget_properties["effortToCMetric"]
effD = widget_properties["effortToDMetric"]
effE = widget_properties["effortToEMetric"]
%>

<link rel="stylesheet" type="text/css" href="<%= url_for_static(:plugin => 'msuselfrontend', :path => 'quamoco.css') -%>" media="screen" />
 
<div id="quamoco-summary" class="quamoco-summary quamoco_summary_widget" style="height:100%; width:100%">

<!--[if lte IE 8 ]> <h3>Your browser is out of date and does not support this widget.</h3> <!--[endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
    <span style="display:inline;width:100%;">
        <div style="float:left;font-family:sans-serif;width:100%;">
            <h2 style="display: inline;" id='title-h2'>Summary</h2>
            <hr style="float:left;width:100%"/>
        </div> </span>
    <script src="<%= url_for_static(:plugin => 'msuselfrontend', :path => 'components.js') -%>"></script>
<script>
// Determine the grade associated with the provided value
function grade(var value) {
    if (value >= <%= gradeAmin %>)
        return "A";
    else if (value >= <%= gradeBmin %>)
        return "B";
    else if (value >= <%= gradeCmin %>)
        return "C";
    else if (value >= <%= gradeDmin %>)
        return "D";
    else if (value >= <%= gradeEmin %>)
        return "E";
    else
        return "F";
}

// Setup the chart width and the data variable
var chartWidth = $('#quamoco-summary').parent().width();
var data = [];

function getValue(metric) {
    var value = [];
    var params = {
        format: "json",
        resource: window.navbarOptions.get('contextKey'), // get the resource name from the page
        depth: 0,
        scope: "PRJ",
        languages: "java,cs",
        includetrends: "true",
        metrics: metric
    }

    // get current measures
    $.getJSON('api/resources', params, function(d) {
        for each (var obj in d["msr"]) {
            var key = obj["key"];
            value.push(obj["val"]);
            value.push(obj["var1"]);
        }
    });

    return value;
}

// Extract data using SonarQube webservice and then fill the datas variable
$(document).read(function() {
    var quality = getValue("<%= quality %>");
    var rmf = getValue("<%= rmf %>");

    data.push({
        "quality":{"grade":grade(quality[0]),"value":quality},
        "rmf":{"grade":grade(rmf[0]), "value":rmf},
        "td":{"ratio":getValue("<%= tdRatio %>"), "value":getValue("<%= tdValue %>"), "loc":getValue("<%= loc %>")},
        "effort":{"A":getValue("<%= effA %>"),"B":getValue("<%= effB %>"),"C":getValue("<%= effC %>"),"D":getValue("<%= effD %>"),"E":getValue("<%= effE %>")}
        });
});

var height = 250;
var topSectWidth = 200;

var svg = d3.select("#quamoco-summary")
	.selectAll("svg")
	.data(data)
    .enter()
	.append("svg")
      .attr("class", "quamoco")
      .attr("width", chartWidth)
      .attr("height", height);

var quality = svg.append("g")
	.style("text-anchor", "start");

gradebox(quality, "Quality Rating:", "quality");

var q_value = quality.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(100, 40)");

valueFieldWithHeader(q_value, "subtitle", "Value:", 30, 0, 30, 0, "quality", "value", "");

var rmf = svg.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(200, 0)");

gradebox(rmf, "RMF Rating:", "rmf");

var r_value = rmf.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(100, 40)");

valueFieldWithHeader(r_value, "subtitle", "Value:", 30, 0, 30, 0, "rmf", "value", "");

var td = svg.append("g")
	.attr("transform", "translate(400, 0)");

valueFieldWithHeader(td, "title", "Technical Debt Ratio:", 70, 20, 70, 1, "td", "ratio", "%")
valueFieldWithHeader(td, "subtitle", "Technical Debt:", 65, 70, 65, 1, "td", "value", "d");

td.append("text")
	.attr("class", "subtitle")
	.attr({
		x: 125,
		y: 70
	})
	.text("Lines of Code:");

td.append("text")
	.attr("class", "value")
	.attr({
		x: 130,
		y: 95
	})
	.text(function(d) { return d.td.loc[0] / 1000 + "k"; });

td.append("text")
	.attr("class", function(d) {
		var val = d.td.loc[1];
		if (val < 0)
			return "negchange";
		else if (val > 0)
			return "poschange";
		return "zerochange"
	})
	.attr("x", 170)
	.attr("y", 95)
	.text(function(d) { return "(" + d.td.loc[1] / 1000 + "k)"; });

var effort = svg.append("g")
	.attr("transform", "translate(0, 115)");

effort.append("text")
	.attr("class", "title")
	.attr("x", 0)
	.attr("y", 0)
	.text("Effort Required");

var effort_g = effort.append("g")
	.style("text-anchor", "start")
	.attr("transform", "translate(20, 25)");

effortBox(effort_g, 0, 0, "A");
effortBox(effort_g, 150, 0, "B");
effortBox(effort_g, 300, 0, "C");
effortBox(effort_g, 450, 0, "D");
</script>
<!--<![endif]-->
<!--[if (gte IE 9)|!(IE)]><!-->
</div>
