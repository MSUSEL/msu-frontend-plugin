<%
 # The MIT License (MIT)
  #
  # SiliconCode Sonar Front End Plugin
  # Copyright (c) 2015 Isaac Griffith, SiliconCode, LLC
  #
  # Permission is hereby granted, free of charge, to any person obtaining a copy
  # of this software and associated documentation files (the "Software"), to deal
  # in the Software without restriction, including without limitation the rights
  # to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  # copies of the Software, and to permit persons to whom the Software is
  # furnished to do so, subject to the following conditions:
  #
  # The above copyright notice and this permission notice shall be included in all
  # copies or substantial portions of the Software.
  #
  # THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  # IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  # FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  # AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  # LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  # OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  # SOFTWARE.

  # require 'json'
  # Grading Scheme
  # gradeAmin = widget_properties["gradeAmin"]
  # gradeBmin = widget_properties["gradeBmin"]
  # gradeCmin = widget_properties["gradeCmin"]
  # gradeDmin = widget_properties["gradeDmin"]
  # gradeEmin = widget_properties["gradeEmin"]
  
  # Metric names
  # quality = widget_properties["qualityMetric"]
  # func_suit = widget_properties["functionalSuitabilityMetric"]
  # reliability = widget_properties["reliabilityMetric"]
  # perf_eff = widget_properties["performanceEfficiencyMetric"]
  # maintainability = widget_properties["maintainabilityMetric"]
  # security = widget_properties["securityMetric"]
  # portability = widget_properties["portabilityMetric"]
  # usability = widget_properties["usabilityMetric"]
  # compatibility = widget_properties["compatibilityMetric"]
  
  
  
  $data = Hash.new
  
  $gradeAmin = 0.98
  $gradeBmin = 0.96
  $gradeCmin = 0.94
  $gradeDmin = 0.92 
  $gradeEmin = 0.90
  
  def grade(value)
    if value.to_f >= $gradeAmin
        return 'A'
    elsif value.to_f >= $gradeBmin
        return 'B'
    elsif value.to_f >= $gradeCmin
        return 'C'
    elsif value.to_f >= $gradeDmin
        return 'D'
    elsif value.to_f >= $gradeEmin
        return 'E'
    else
        return 'F'
    end
  end
  
  def value_of(metric_or_measure)
      m = nil
      if metric_or_measure.is_a? ProjectMeasure
          m = metric_or_measure
      elsif @project.last_snapshot
          m = @project.last_snapshot.measure(metric_or_measure)
      end
      
      return '' if m.nil?
      
      return m.formatted_value if m && m.metric
  end
  
  # def last_10(metric)
      # pid = @project.id
      
      # last10 = Array.new
      
      # results = Snapshot.order(created_at: :desc).limit(10).order(created_at: :asc)
      # results.each |shot| do
          # m = shot.measure(metric)
          # last10 << m.formatted_value unless m.nil?
      # end
      
      # last10
  # end
  
  def set_data(model)
      metrics = Hash.new
      metric_names = nil
      
      quamoco_names = "quamoco.QUALITY,quamoco.FUNCTIONAL_SUITABILITY,quamoco.SECURITY,quamoco.RELIABILITY,quamoco.MAINTAINABILITY,quamoco.PERFORMANCE_EFFICIENCY,quamoco.PORTABILITY,quamoco.FUNCTIONAL_CORRECTNESS,quamoco.TESTABILITY,quamoco.MODIFIABILITY,quamoco.ANALYZABILITY,quamoco.REUSABILITY,quamoco.TIME_BEHAVIOR,quamoco.RESOURCE_UTILIZATION"
      qmood_names = "qmood.REUSABILITY,qmood.FLEXIBILITY,qmood.UNDERSTANDABILITY,qmood.FUNCTIONALITY,qmood.EXTENDIBILITY,qmood.EFFECTIVENESS"
      columbus_names = "columbus.MAINTAINABILITY,columbus.TESTABILITY,columbus.ANALYZABILITY,columbus.EFFECTIVENESS,columbus.STABILITY,columbus.CHANGEABILITY"
      sqale_names = "maintainability,efficiency,reliability,usability,portability"
      
      case model
          when 'Quamoco'
              metric_names = quamoco_names
          when 'Columbus'
              metric_names = columbus_names
          when 'QMOOD'
              metric_names = qmood_names
          when 'SQALE'
              metric_names = sqale_names
          else
              metric_names = quamoco_names
      end 
      
      unless metric_names.nil?
          metric_names.split(",").each do |x|
          	metrics[x] = metric(x)
          end
      end
      
      datas = Array.new
     
      metrics.each do |k, v|
      	current = value_of(v)
      	previous = value_of(v)
      	last10 = Array.new
      	obj = {
    		"title" => v.short_name,
    		"subtitle" => "",
    		"last10max" => 0, # last10.max,
    		"last10" => last10,
    		"ranges" => [
    			$gradeAmin,$gradeBmin,$gradeCmin,$gradeDmin,$gradeEmin
    		],
    		"measures" => [current.to_f, previous.to_f],
    		"markers" => [$gradeAmin],
    		"value" => [current.to_f, (previous.to_f - current.to_f).to_f],
    		"grade" => grade(current)
    	}
    	
    	datas << obj
      end 
      
      $data[model] = datas
  end
  
  # names = ['Quamoco', 'Columbus', 'QMOOD', 'SQALE']
  names = ['Quamoco']
  names.each {|x| set_data(x)}
  # names.each do |name|
      # set_data(name)
  # end
%>

<link rel="stylesheet" type="text/css" href="<%= url_for_static(:plugin => 'msufrontend', :path => 'quamoco.css') %>" media="screen" />

<div id="quamoco-bullets" class="quamoco-bullets quamoco_bullets_widget" style="height:100%;width:100%;">

	<!--[if lte IE 8 ]> <h3>Your browser is out of date and does not support this widget.</h3> <!--[endif]-->
	<!--[if (gte IE 9)|!(IE)]><!-->
	<span style="display:inline;width:100%;">
		<div style="float:left;font-family:sans-serif;width:100%;">
			<h2 style="display: inline;" id='title-h2'>Quamoco Product Quality</h2>&nbsp;&nbsp;&nbsp; <h3 style="display: inline;" id="compliance">(ISO/IEC 25010)</h3>
			<div style="display: inline;float:right;font-family:sans-serif;">
				<form>
					Model:&nbsp;&nbsp;
					<select class="td-method" id="td-method" onchange="updateEverything(this.options[this.selectedIndex].text)">
						<option value="quamoco">Quamoco</option>
						<!--<option value="qmood">QMOOD</option>-->
						<option value="sqale">SQALE</option>
						<!--<option value="columbus">Columbus</option>-->
					</select>
				</form>
			</div>
			<hr style="float:left;width:100%"/>
		</div> </span>
	<script src="<%= url_for_static(:plugin => 'msufrontend', :path => 'bullets.js') %>"></script>
	<script src="<%= url_for_static(:plugin => 'msufrontend', :path => 'components.js') %>"></script>
	<script src="<%= url_for_static(:plugin => 'msufrontend', :path => 'CombinedChart.js') %>"></script>

	<script>
	    var allData = JSON.parse('<%= raw $data.to_json %>');
		
		function updateMetrics(selected) {
		    datas = allData[selected];
		}
        
		function set_title(selected) {
			if (selected === "Quamoco") {
				document.getElementById("title-h2").innerHTML = "Quamoco Quality Model";
				document.getElementById("compliance").innerHTML = "(ISO/IEC 25010)";
			} else if (selected === "QMOOD") {
				document.getElementById("title-h2").innerHTML = "QMOOD Quality Model";
				document.getElementById("compliance").innerHTML = "";
			} else if (selected === "Columbus") {
				document.getElementById("title-h2").innerHTML = "Columbus Quality Model";
				document.getElementById("compliance").innerHTML = "(ISO 9126)";
			} else if (selected === "SQALE") {
				document.getElementById("title-h2").innerHTML = "SQALE Quality Model";
				document.getElementById("compliance").innerHTML = "(ISO 9126)";
			}
		}
		
		function updateEverything(selected) {
            set_title(selected);
            
            d3.select("#quamoco-bullets").selectAll("svg").remove();
            
            updateMetrics(selected.trim());
            var chart = d3.CombinedChart()
                .height(45 - 5 - 20)
                .valueFixed(2)
                .contWidth(chartWidth)
                .data(datas)
                .contID("#quamoco-bullets")
                .cssclass("quamoco")
                .grade(true);
            if (datas[0]['last10'].length == 0)
            {
                chart.sparkLines(false);
            } else {
                chart.sparkLines(false);
            }
            chart.createChart();
        }
		
		// Setup the chart width and the data variable
		var chartWidth = jQuery('#quamoco-bullets').parent().width();
		var datas = [];
		
		updateEverything(jQuery('#td-method :selected').text());
	</script>
	<!--<![endif]-->
	<!--[if (gte IE 9)|!(IE)]><!-->
</div>